name: rilis-packages-new

on:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.arch }}-${{ matrix.branch }} build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_generic
        branch:
          - openwrt-24.10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build package
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.branch }}
          FEEDNAME: nikki
          PACKAGES: luci-app-nikki
          NO_REFRESH_CHECK: true

      - name: Extract package version
        id: extract_version
        run: |
          set -e
          PKG_FILE=$(find bin/packages/${{ matrix.arch }}/nikki -name 'nikki_*.ipk' | head -n 1)
          if [[ -z "$PKG_FILE" ]]; then
            echo "❌ Package file not found!"
            exit 1
          fi
          echo "Found package: $PKG_FILE"
          VERSION=$(basename "$PKG_FILE" | sed -E 's/^nikki_([^_]+)_.*\.ipk/\1/')
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Compress .ipk files
        id: compress
        run: |
          mkdir -p output
          cp bin/packages/${{ matrix.arch }}/nikki/*.ipk output/
          TODAY=$(date +'%Y-%m-%d')
          FILENAME=Nikki-TProxy-${TODAY}-${{ steps.extract_version.outputs.version }}_${{ matrix.arch }}-${{ matrix.branch }}.zip
          zip -j "$FILENAME" output/*.ipk
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.compress.outputs.filename }}
          path: ${{ steps.compress.outputs.filename }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.compress.outputs.filename }}
          tag_name: ${{ steps.compress.outputs.filename }}
          files: ${{ steps.compress.outputs.filename }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
