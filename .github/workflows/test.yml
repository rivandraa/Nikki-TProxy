name: release-packages-test

on:
  workflow_dispatch:

permissions:
  contents: write  # Dibutuhkan untuk membuat dan mengupload release

jobs:
  build:
    name: ${{ matrix.arch }}-${{ matrix.branch }} build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_generic
        branch:
          - openwrt-24.10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build package
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.branch }}
          FEEDNAME: nikki
          PACKAGES: luci-app-nikki
          NO_REFRESH_CHECK: true

      - name: Extract package version
        id: extract_version
        run: |
          set -e
          PKG_FILE=$(find bin/packages/${{ matrix.arch }}/nikki -name 'nikki_*.ipk' | head -n 1)
          if [[ -z "$PKG_FILE" ]]; then
            echo "❌ Package file not found!"
            exit 1
          fi
          echo "Found package: $PKG_FILE"
          VERSION=$(basename "$PKG_FILE" | sed -E 's/^nikki_([^_]+)_.*\.ipk/\1/')
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload raw artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: Nikki-TProxy-${{ steps.extract_version.outputs.version }}_${{ matrix.arch }}-${{ matrix.branch }}
          path: bin/packages/${{ matrix.arch }}/nikki

      - name: Compress .ipk files
        run: |
          mkdir -p output
          cp bin/packages/${{ matrix.arch }}/nikki/*.ipk output/
          zip -j Nikki-TProxy-${{ steps.extract_version.outputs.version }}_${{ matrix.arch }}-${{ matrix.branch }}.zip output/*.ipk

      - name: Debug Git Configuration
        run: |
          echo "Checking Git configuration..."
          git config --list
          git branch -a
          git status

      - name: Create empty commit and tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout main
          
          # Debug for existing tag and ensure valid tag name
          RAW_TAG_NAME="Nikki-TProxy-${{ steps.extract_version.outputs.version }}_${{ matrix.arch }}-${{ matrix.branch }}"
          TAG_NAME=$(echo "$RAW_TAG_NAME" | sed 's/[^a-zA-Z0-9_.-]/-/g')  # Replace invalid characters
          
          echo "Generated valid tag name: $TAG_NAME"

          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists. Deleting it..."
            git tag -d "$TAG_NAME"
            git push --delete origin "$TAG_NAME" || true
          fi

          git checkout --orphan temp-release-branch
          git rm -rf .
          git commit --allow-empty -m "Release: $TAG_NAME"
          git tag -a "$TAG_NAME" -m "Version ${{ steps.extract_version.outputs.version }}"
          git push origin "$TAG_NAME"
          git checkout main
          git branch -D temp-release-branch

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          release_name: ${{ steps.create_tag.outputs.tag_name }}
          draft: false
          prerelease: false

      - name: Upload ZIP to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Nikki-TProxy-${{ steps.extract_version.outputs.version }}_${{ matrix.arch }}-${{ matrix.branch }}.zip
          asset_name: Nikki-TProxy-${{ steps.extract_version.outputs.version }}_${{ matrix.arch }}-${{ matrix.branch }}.zip
          asset_content_type: application/zip